name: Build and Push Image to GHCR

on:
    push:
        branches:
            - develop

jobs:
    build_push:
      name: Build and push image
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        id-token: write

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
              app/Containerfile
          image: ${{ github.event.repository.name}}
          oci: true
          context: ./app

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          registry: "ghcr.io/${{ github.repository_owner }}"
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
    
    deploy:
      runs-on: ubuntu-latest
      needs: build_push
      steps:
      - name: Setup Wireguard
        run: |
          sudo apt install wireguard
          echo "${{ secrets.WG_PRIVATE }}" > privatekey
          sudo ip link add dev wg0 type wireguard
          sudo ip -4 address add ${{ secrets.WG_IP}} dev wg0 
          echo "Configuring wireguard connection"
          sudo wg set wg0 private-key privatekey \
            peer ${{ secrets.WG_ENDPOINT_PUBKEY }} \
            allowed-ips ${{ secrets.WG_ALLOWED_IPS }} \
            endpoint ${{ secrets.WG_ENDPOINT }}
          sudo ip link set mtu 1412 up dev wg0
          ping -c 1 10.10.10.1

      - name: Setup SSH key
        run: |
          env
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.ARTIFACT_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to server
        run: |
          ssh -v ${{ secrets.SSH_USER }}@${{ secrets.ARTIFACT_HOST }} << 'ENDSSH'
          date >> teste.txt